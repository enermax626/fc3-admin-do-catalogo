name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master
      - develop
      - 'hotfix/**'
      - 'release/**'
  workflow_dispatch:

env:
  IMAGE_NAME: enermax626/fc3-admin-do-catalogo

jobs:
  #job para executar os testes
  tests:
    name: Tests runner
    runs-on: ubuntu-latest
    #config de passos do job
    steps:
      #1. Check source code
      - name: Checkout
        uses: actions/checkout@v3
      #2. Setup Java
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
      #3. Executar testes da aplicação
      - name: Run tests
        run: ./gradlew test

  #job para fazer o build da aplicação
  build:
    name: Build application
    needs: tests
    runs-on: ubuntu-latest
    #Configuracao dos passos do job
    steps:
        #1. Check source code
        - name: Checkout
          uses: actions/checkout@v3
        #2. Setup Java
        - name: Setup Java
          uses: actions/setup-java@v3
          with:
          java-version: 17
          distribution: 'adopt'
        #3. Valida a existencia do gradle wrapper
        - name: Validate Gradle Wrapper
          uses: gradle/wrapper-validation-action@1.0.6
        #4. Executar build da aplicação
        - name: Build da aplicacao
          run: gradle/gradle-build.action@2.4.0
          with:
            arguments: clean build -x test
        #5. Definir a variavel branch name
        - name: Set BUILD_TAG
          run: |
            echo BUILD_TAG=$(echo ${{ github.head_ref || github.ref_name }} | sed "s,/,_,g")-${{ github.run_number }} >> $GITHUB_ENV
        #6. Print build tag
        - name: Print BUILD_TAG
          run: |
            echo "Branch     ---> ${{ github.head_ref || github.ref_name }}"
            echo "Run number ---> ${{ github.run_number }}"
            echo "Tag        ---> ${{ env.BUILD_TAG }}"
        #7. Log in to Dockerhub
        - name: Log in to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_HUB_USER }}
            password: ${{ secrets.DOCKER_HUB_PWD }}
        #8 Build e deploy da imagem
        - name: Build and push image
          uses: docker/build-push-action@v3
          with:
            context: .
            push: true
            build-args: |
              VERSION=${{ env.BUILD_TAG }}
            tags: |
                ${{ env.IMAGE_NAME }}:${{ env.BUILD_TAG }}
